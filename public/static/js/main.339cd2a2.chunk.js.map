{"version":3,"sources":["Login.js","Player.js","TrackSearchResult.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","className","src","alt","Container","style","minHeight","href","Player","accessToken","trackUri","useState","play","setPlay","useEffect","token","showSaveIcon","callback","state","isPlaying","uris","TrackSearchResult","track","chooseTrack","cursor","onClick","albumUrl","height","width","title","artist","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","useAuth","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.339cd2a2.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Login.css';\n\nconst AUTH_URL = `https://accounts.spotify.com/authorize?\nclient_id=454f89e07686489195d5252745c22c18&response_type=code&redirect_uri=https://spotifybutbetteriq.com&\nscope=streaming%20user-read-email%20user-read-private%20user-library-\nread%20user-library-modify%20user-read-playback-state%20user-modify-playback-state`;\n\nexport default function Login() {\n  return (\n    <div className='login'>\n      <img src='https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg' alt='' />\n      <Container\n        className='d-flex justify-content-center align-items-center'\n        style={{minHeight: '35vh'}}\n      >\n        <a className='btn btn-success btn-lg' href={AUTH_URL}>\n          Login With Spotify :D\n        </a>\n      </Container>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport SpotifyPlayer from 'react-spotify-web-playback';\n\nexport default function Player({ accessToken, trackUri }) {\n  \n  const [play, setPlay] = useState(false);\n\n  useEffect(() => setPlay(true), [trackUri]);\n\n  if (!accessToken) return null;\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      callback={state => {\n        if (!state.isPlaying) setPlay(false)\n      }}\n      play={play}\n      uris={trackUri ? [trackUri] : []}\n    />\n  )\n}","import React from 'react';\n\nexport default function TrackSearchResult({ track, chooseTrack }) {\n  \n  function handlePlay() {\n    chooseTrack(track);\n  }\n\n  return (\n    <div \n      className='d-flex m-2 align-items-center'\n      style={{ cursor: 'pointer' }}\n      onClick={handlePlay}\n    >\n      <img src={track.albumUrl} alt='' style={{ height: '64px', width: '64px' }} />\n      <div className='mx-3'>\n        <div>{track.title}</div>\n        <div className ='text-muted'>{track.artist}</div>\n      </div>\n    </div>\n  )\n}","import { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport Player from './Player';\nimport TrackSearchResult from './TrackSearchResult';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport axios from 'axios';\nimport './Dashboard.css';\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: '454f89e07686489195d5252745c22c18'\n})\n\nexport default function Dashboard({code}) {\n  \n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get('https://spotifybutbetteriq.com/lyrics', {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    })\n  }, [playingTrack])\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken])\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(\n        res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0])\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          }\n        })\n      );\n    })\n\n    return () => cancel = true;\n  }, [search, accessToken])\n\n  return (\n    <div className='dashboard'>\n      <Container className = 'd-flex flex-column py-2' style={{\n        height: '100vh' }}>\n        <Form.Control \n          type='search'\n          placeholder='Search Songs/Artists' \n          value={search} \n          onChange={e => setSearch(e.target.value)}\n        />\n        <div className='flex-grow-1 my-2' style={{ overflowY: 'auto'}}>\n          {searchResults.map(track => (\n            <TrackSearchResult \n              track={track}\n              key={track.uri} \n              chooseTrack={chooseTrack}\n            />\n          ))}\n          {searchResults.length === 0 && (\n            <div className='text-center' style={{ whiteSpace: 'pre'}}>\n              {lyrics}\n            </div>\n          )}\n        </div>\n        <div><Player accessToken={accessToken} trackUri={playingTrack?.uri}/></div>\n      </Container>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n\n  useEffect(() => {\n    axios\n      .post('https://spotifybutbetteriq.com/login', {\n        code,\n      })\n      .then(res => {\n        setAccessToken(res.data.accessToken);\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        window.history.pushState({}, null, '/');\n      })\n      .catch(() => {\n        window.location = '/';\n      })\n  }, [code])\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios\n        .post('https://spotifybutbetteriq.com/refresh', {\n          refreshToken,\n        }).then(res => {\n          setAccessToken(res.data.accessToken);\n          setExpiresIn(res.data.expiresIn);\n        })\n        .catch(() => {\n          window.location = '/';\n        })\n    }, (expiresIn - 60) * 1000)\n      \n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn])\n\n  return accessToken; // the token that allows us to call all the Spotify APIs\n}                     // but, only lasts an hour \n","import Login from './Login';\nimport Dashboard from './Dashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst code = new URLSearchParams(window.location.search).get('code');\n\nfunction App() {\n  return (\n    code ? <Dashboard code={code} /> : <Login />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}